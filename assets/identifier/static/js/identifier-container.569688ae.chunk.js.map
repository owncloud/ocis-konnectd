{"version":3,"sources":["images/kopano-logo.svg","utils.js","components/ResponsiveDialog.js","models/hello.js","errors/index.js","actions/utils.js","actions/common-actions.js","components/Loading.js","components/ResponsiveScreen.js","actions/login-actions.js","components/Login.js","components/Chooseaccount.js","components/ClientDisplayName.js","components/ScopesList.js","components/Consent.js","components/RedirectWithQuery.js","components/Loginscreen.js","components/Welcomescreen.js","components/Goodbyescreen.js","components/PrivateRoute.js","containers/Identifier.js"],"names":["module","exports","__webpack_require__","p","withClientRequestState","obj","state","Math","random","toString","substring","propertyFromStylesheet","selector","attribute","value","sheetHref","asURL","arguments","length","undefined","Array","prototype","some","call","document","styleSheets","sheet","cssRules","rule","href","selectorText","style","getPropertyValue","match","baseHref","replace","withMobileDialog","props","react_default","a","createElement","Dialog_default","newHelloRequest","flow","query","r","prompt","selectedFlow","scope","client_id","redirect_uri","id_token_hint","max_age","claims_scope","ERROR_LOGIN_VALIDATE_MISSINGUSERNAME","ERROR_LOGIN_VALIDATE_MISSINGPASSWORD","ERROR_LOGIN_FAILED","ERROR_HTTP_NETWORK_ERROR","ERROR_HTTP_UNEXPECTED_RESPONSE_STATUS","ERROR_HTTP_UNEXPECTED_RESPONSE_STATE","translations","defineMessages","_defineMessages","Object","defineProperty","id","defaultMessage","ExtendedError","_Error","message","values","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","Error","captureStackTrace","assertThisInitialized","inherits","wrapNativeSuper","ErrorMessage","injectIntl","error","intl","messageDescriptor","assign","formatMessage","handleAxiosError","request","response","receiveError","type","types","resetHello","receiveHello","hello","success","username","displayName","executeHello","dispatch","getState","_getState$common","common","axios","post","headers","Kopano-Konnect-XSRF","then","status","data","Promise","resolve","catch","executeLogoff","Loading","_this$props","classes","Grid_default","container","direction","alignItems","justify","spacing","className","root","item","align","renderIf","LinearProgress_default","progress","Typography_default","variant","gutterBottom","index_es","color","Button_default","autoFocus","button","onClick","event","retry","preventDefault","Component","connect","withStyles","theme","flexGrow","position","top","bottom","left","right","height","width","marginTop","unit","ResponsiveScreen","withoutLogo","withoutPadding","loading","children","DialogProps","PaperProps","other","objectWithoutProperties","logo","DialogContent_default","src","KopanoLogo","alt","content","components_Loading","classNames","components_ResponsiveDialog","open","fullWidth","maxWidth","disableBackdropClick","disableEscapeKeyDown","hideBackdrop","objectSpread","elevation","DialogActions_default","actions","disableActionSpacing","LocaleSelect","disableUnderline","defaultProps","display","flex","paddingTop","paddingBottom","minHeight","paddingLeft","paddingRight","marginBottom","justifyContent","ModeLogonUsernameEmptyPasswordCookie","ModeLogonUsernamePassword","receiveValidateLogon","errors","executeLogon","password","mode","requestLogon","params","push","http","logon","receiveLogon","executeConsent","allow","requestConsent","ref","flow_nonce","nonce","receiveConsent","executeLogonIfFormValid","isSignedIn","reject","keys","validateUsernamePassword","advanceLogonFlow","history","done","extraQuery","_getState$common2","q","details","next","concat","location","search","hash","continue_uri","window","queryString","stringify","continue","indexOf","origin","target","action","Login","onAutoFill","fieldName","autoFill","setState","bindAutoFill","element","addEventListener","e","animationName","_this2","_this$props2","inputProps","autoCapitalize","spellCheck","input","component","subHeader","onSubmit","TextField_default","label","helperText","margin","InputLabelProps","shrink","onChange","handleChange","autoComplete","wrapper","disabled","CircularProgress_default","size","buttonProgress","name","_this3","updateInput","_this$props3","_state$login","login","_state$common","minWidth","green","marginLeft","&:-webkit-autofill","&:not(:-webkit-autofill)","Chooseaccount","errorMessage","List_default","disablePadding","accountList","ListItem_default","disableGutters","accountListItem","Avatar_default","substr","ListItemText_default","primary","logoff","marginRight","ClientDisplayName","_ref","client","rest","display_name","scopeIDTranslations","scope_alias_basic","scope_offline_access","row","scopes","meta","mapping","definitions","rows","known","definition","translation","description","dense","key","Checkbox_default","checked","disableRipple","Consent","filter","join","konnect","clientDisplayName","Tooltip_default","placement","title","redirectURI","components_ClientDisplayName","components_ScopesList","scopesList","REQUEST_CONSENT_ALLOW","withRouter","to","pathname","react_router","Loginscreen","components_ResponsiveScreen","path","exact","components_RedirectWithQuery","React","PureComponent","Welcomescreen","Goodbyescreen","PrivateRoute","Target","render","bg","overlay","promises","img","Image","onload","all","getElementById","enhanceBodyBackground","Identifier","pathPrefix","react_router_dom","basename","components_PrivateRoute","reload","updateAvailable"],"mappings":"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","file":"static/js/identifier-container.569688ae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kopano-logo.10e256c7.svg\";","export function withClientRequestState(obj) {\n  obj.state = Math.random().toString(36).substring(7);\n\n  return obj;\n}\n\nexport function dirname(s) {\n  return s.replace(/\\\\/g,'/').replace(/\\/[^/]*$/, '');\n}\n\nexport function propertyFromStylesheet(selector, attribute, asURL=false) {\n  let value;\n  let sheetHref;\n\n  Array.prototype.some.call(document.styleSheets, function(sheet) {\n    return Array.prototype.some.call(sheet.cssRules, function(rule) {\n      sheetHref = sheet.href;\n      if (selector === rule.selectorText) {\n        return Array.prototype.some.call(rule.style, function(style) {\n          if (attribute === style) {\n            value = rule.style.getPropertyValue(attribute);\n            return true;\n          }\n\n          return false;\n        });\n      }\n\n      return false;\n    });\n  });\n\n  if (value && asURL) {\n    // This removes url() shit if there.\n    value = value.match(/(?:\\(['|\"]?)(.*?)(?:['|\"]?\\))/)[1];\n    if (!value) {\n      return null;\n    }\n    if (sheetHref) {\n      // URLs in CSS are relative to the CSS - so lets add stuff.\n      const baseHref = dirname(sheetHref);\n      value = baseHref + '/' + value;\n    }\n  }\n\n  return value;\n}\n\nexport function enhanceBodyBackground() {\n  const bg = propertyFromStylesheet('#bg-enhanced.enhanced', 'background-image', true);\n  const overlay = propertyFromStylesheet('#bg-enhanced.enhanced::after', 'background-image', true);\n\n  const promises = [];\n  if (bg) {\n    promises.push(new Promise(resolve => {\n      const img = new Image();\n      img.onload = () => {\n        resolve();\n      };\n      // Set image source to whatever the url from css holds.\n      img.src = bg;\n    }));\n  }\n  if (overlay) {\n    promises.push(new Promise(resolve => {\n      const img = new Image();\n      img.onload = () => {\n        resolve();\n      };\n      // Set image source to whatever the url from css holds.\n      img.src = overlay;\n    }));\n  }\n  Promise.all(promises).then(() => {\n    window.document.getElementById('bg-enhanced').className += ' enhanced';\n  });\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\n\nfunction ResponsiveDialog(props) {\n  return <Dialog {...props}/>;\n}\n\nResponsiveDialog.propTypes = {\n  fullScreen: PropTypes.bool.isRequired\n};\n\nexport default withMobileDialog()(ResponsiveDialog);\n","export function newHelloRequest(flow, query) {\n  const r = {};\n\n  if (query.prompt) {\n    // TODO(longsleep): Validate prompt values?\n    r.prompt = query.prompt;\n  }\n\n  let selectedFlow = flow;\n  switch (flow) {\n    case 'oauth':\n    case 'consent':\n    case 'oidc':\n      r.scope = query.scope || '';\n      r.client_id = query.client_id || ''; // eslint-disable-line camelcase\n      r.redirect_uri = query.redirect_uri || '';  // eslint-disable-line camelcase\n      if (query.id_token_hint) {\n        r.id_token_hint = query.id_token_hint;  // eslint-disable-line camelcase\n      }\n      if (query.max_age) {\n        r.max_age = query.max_age;  // eslint-disable-line camelcase\n      }\n      if (query.claims_scope) {\n        // Add additional scopes from claims request if given.\n        r.scope += ' ' + query.claims_scope;\n      }\n      break;\n\n    default:\n      selectedFlow = null;\n  }\n\n  if (selectedFlow) {\n    r.flow = selectedFlow;\n  }\n\n  return r;\n}\n","import { injectIntl, defineMessages } from 'react-intl';\n\nexport const ERROR_LOGIN_VALIDATE_MISSINGUSERNAME = 'konnect.error.login.validate.missingUsername';\nexport const ERROR_LOGIN_VALIDATE_MISSINGPASSWORD = 'konnect.error.login.validate.missingPassword';\nexport const ERROR_LOGIN_FAILED = 'konnect.error.login.failed';\nexport const ERROR_HTTP_NETWORK_ERROR = 'konnet.error.http.networkError';\nexport const ERROR_HTTP_UNEXPECTED_RESPONSE_STATUS = 'konnect.error.http.unexpectedResponseStatus';\nexport const ERROR_HTTP_UNEXPECTED_RESPONSE_STATE = 'konnect.error.http.unexpectedResponseState';\n\n// Translatable error messages.\nconst translations = defineMessages({\n  [ERROR_LOGIN_VALIDATE_MISSINGUSERNAME]: {\n    id: ERROR_LOGIN_VALIDATE_MISSINGUSERNAME,\n    defaultMessage: 'Enter an username'\n  },\n  [ERROR_LOGIN_VALIDATE_MISSINGPASSWORD]: {\n    id: ERROR_LOGIN_VALIDATE_MISSINGPASSWORD,\n    defaultMessage: 'Enter a password'\n  },\n  [ERROR_LOGIN_FAILED]: {\n    id: ERROR_LOGIN_FAILED,\n    defaultMessage: 'Logon failed. Please verify your credentials and try again.'\n  },\n  [ERROR_HTTP_NETWORK_ERROR]: {\n    id: ERROR_HTTP_NETWORK_ERROR,\n    defaultMessage: 'Network error. Please check your connection and try again.'\n  },\n  [ERROR_HTTP_UNEXPECTED_RESPONSE_STATUS]: {\n    id: ERROR_HTTP_UNEXPECTED_RESPONSE_STATUS,\n    defaultMessage: 'Unexpected HTTP response: {status}. Please check your connection and try again.'\n  },\n  [ERROR_HTTP_UNEXPECTED_RESPONSE_STATE]: {\n    id: ERROR_HTTP_UNEXPECTED_RESPONSE_STATE,\n    defaultMessage: 'Unexpected response state: {state}'\n  }\n});\n\n// Error with values.\nexport class ExtendedError extends Error {\n  values = undefined;\n\n  constructor(message, values) {\n    super(message);\n    if (Error.captureStackTrace !== undefined) {\n      Error.captureStackTrace(this, ExtendedError);\n    }\n    this.values = values;\n  }\n}\n\n// Component to translate error text with values.\nfunction ErrorMessageComponent(props) {\n  const { error, intl } = props;\n\n  if (!error) {\n    return null;\n  }\n\n  const id = error.id ? error.id : error.message;\n  const messageDescriptor = Object.assign({}, {\n    id,\n    defaultMessage: error.id ? error.message : undefined\n  }, translations[id]);\n\n  return intl.formatMessage(messageDescriptor, error.values);\n}\n\nexport const ErrorMessage = injectIntl(ErrorMessageComponent);\n","import {\n  ExtendedError,\n  ERROR_HTTP_NETWORK_ERROR,\n  ERROR_HTTP_UNEXPECTED_RESPONSE_STATUS\n} from '../errors';\n\nexport function handleAxiosError(error) {\n  if (error.request) {\n    // Axios errors.\n    if (error.response) {\n      error = new ExtendedError(ERROR_HTTP_UNEXPECTED_RESPONSE_STATUS, error.response);\n    } else {\n      error = new ExtendedError(ERROR_HTTP_NETWORK_ERROR);\n    }\n  }\n\n  return error;\n}\n","import axios from 'axios';\n\nimport * as types from './action-types';\nimport { newHelloRequest } from '../models/hello';\nimport { withClientRequestState } from '../utils';\nimport { handleAxiosError } from './utils';\nimport {\n  ExtendedError,\n  ERROR_HTTP_UNEXPECTED_RESPONSE_STATUS,\n  ERROR_HTTP_UNEXPECTED_RESPONSE_STATE\n} from '../errors';\n\nexport function receiveError(error) {\n  return {\n    type: types.RECEIVE_ERROR,\n    error\n  };\n}\n\nexport function resetHello() {\n  return {\n    type: types.RESET_HELLO\n  };\n}\n\nexport function receiveHello(hello) {\n  const { success, username, displayName } = hello;\n\n  return {\n    type: types.RECEIVE_HELLO,\n    state: success === true,\n    username,\n    displayName,\n    hello\n  };\n}\n\nexport function executeHello() {\n  return function(dispatch, getState) {\n    dispatch(resetHello());\n\n    const { flow, query } = getState().common;\n\n    const r = withClientRequestState(newHelloRequest(flow, query));\n    return axios.post('./identifier/_/hello', r, {\n      headers: {\n        'Kopano-Konnect-XSRF': '1'\n      }\n    }).then(response => {\n      switch (response.status) {\n        case 200:\n          // success.\n          return response.data;\n        case 204:\n          // not signed-in.\n          return {\n            success: false,\n            state: response.headers['kopano-konnect-state']\n          };\n        default:\n          // error.\n          throw new ExtendedError(ERROR_HTTP_UNEXPECTED_RESPONSE_STATUS, response);\n      }\n    }).then(response => {\n      if (response.state !== r.state) {\n        throw new ExtendedError(ERROR_HTTP_UNEXPECTED_RESPONSE_STATE, response);\n      }\n\n      dispatch(receiveHello(response));\n      return Promise.resolve(response);\n    }).catch(error => {\n      error = handleAxiosError(error);\n\n      dispatch(receiveError(error));\n    });\n  };\n}\n\nexport function retryHello() {\n  return function(dispatch) {\n    dispatch(receiveError(null));\n\n    return dispatch(executeHello());\n  };\n}\n\nexport function requestLogoff() {\n  return {\n    type: types.REQUEST_LOGOFF\n  };\n}\n\nexport function receiveLogoff(state) {\n  return {\n    type: types.RECEIVE_LOGOFF,\n    state\n  };\n}\n\nexport function executeLogoff() {\n  return function(dispatch) {\n    dispatch(resetHello());\n    dispatch(requestLogoff());\n\n    const r = withClientRequestState({});\n    return axios.post('./identifier/_/logoff', r, {\n      headers: {\n        'Kopano-Konnect-XSRF': '1'\n      }\n    }).then(response => {\n      switch (response.status) {\n        case 200:\n          // success.\n          return response.data;\n        default:\n          // error.\n          throw new ExtendedError(ERROR_HTTP_UNEXPECTED_RESPONSE_STATUS, response);\n      }\n    }).then(response => {\n      if (response.state !== r.state) {\n        throw new ExtendedError(ERROR_HTTP_UNEXPECTED_RESPONSE_STATE, response);\n      }\n\n      dispatch(receiveLogoff(response.success === true));\n      return Promise.resolve(response);\n    }).catch(error => {\n      error = handleAxiosError(error);\n\n      dispatch(receiveError(error));\n    });\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport renderIf from 'render-if';\n\nimport { retryHello } from '../actions/common-actions';\nimport { ErrorMessage } from '../errors';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0\n  },\n  progress: {\n    height: '4px',\n    width: '100px'\n  },\n  button: {\n    marginTop: theme.spacing.unit * 5\n  }\n});\n\nclass Loading extends Component {\n  render() {\n    const { classes, error } = this.props;\n\n    return (\n      <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\" spacing={0} className={classes.root}>\n        <Grid item align=\"center\">\n          {renderIf(error === null)(() => (\n            <LinearProgress className={classes.progress} />\n          ))}\n          {renderIf(error !== null)(() => (\n            <div>\n              <Typography variant=\"h5\" gutterBottom align=\"center\">\n                <FormattedMessage id=\"konnect.loading.error.headline\" defaultMessage=\"Failed to connect to server\">\n                </FormattedMessage>\n              </Typography>\n              <Typography  gutterBottom align=\"center\" color=\"error\">\n                <ErrorMessage error={error}></ErrorMessage>\n              </Typography>\n              <Button\n                autoFocus\n                color=\"primary\"\n                variant=\"outlined\"\n                className={classes.button}\n                onClick={(event) => this.retry(event)}\n              >\n                <FormattedMessage id=\"konnect.login.retryButton.label\" defaultMessage=\"Retry\"></FormattedMessage>\n              </Button>\n            </div>\n          ))}\n        </Grid>\n      </Grid>\n    );\n  }\n\n  retry(event) {\n    event.preventDefault();\n\n    this.props.dispatch(retryHello());\n  }\n}\n\nLoading.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  error: PropTypes.object,\n\n  dispatch: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => {\n  const { error } = state.common;\n\n  return {\n    error\n  };\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(Loading));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport LocaleSelect from 'kpop/es/IntlContainer/LocaleSelect';\n\nimport ResponsiveDialog from './ResponsiveDialog';\nimport KopanoLogo from '../images/kopano-logo.svg';\nimport Loading from './Loading';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flex: 1\n  },\n  content: {\n    paddingTop: 24,\n    paddingBottom: 12,\n    minHeight: 500,\n    paddingLeft: 2 * theme.spacing.unit,\n    paddingRight: 2 * theme.spacing.unit,\n    position: 'relative'\n  },\n  logo: {\n    height: 18,\n    marginBottom: theme.spacing.unit * 2\n  },\n  actions: {\n    marginTop: -40,\n    justifyContent: 'flex-start',\n    paddingLeft: 3 * theme.spacing.unit,\n    paddingRight: 3 * theme.spacing.unit\n  }\n});\n\nfunction ResponsiveScreen(props) {\n  const {\n    classes,\n    withoutLogo,\n    withoutPadding,\n    loading,\n    children,\n    className,\n    DialogProps,\n    PaperProps,\n    ...other\n  } = props;\n\n  const logo = withoutLogo ? null :\n    <DialogContent><img src={KopanoLogo} className={classes.logo} alt=\"Kopano\"/></DialogContent>;\n\n  const content = loading ? <Loading/> : (withoutPadding ? children : <DialogContent>{children}</DialogContent>);\n\n  return (\n    <Grid container justify=\"center\" alignItems=\"center\" spacing={0}\n      className={classNames(classes.root, className)} {...other}>\n      <ResponsiveDialog open fullWidth maxWidth=\"sm\"\n        disableBackdropClick disableEscapeKeyDown hideBackdrop\n        {...DialogProps}\n        PaperProps={{elevation: 4, ...PaperProps}}\n      >\n        <div className={classes.content}>\n          {logo}\n          {content}\n        </div>\n        <DialogActions className={classes.actions} disableActionSpacing><LocaleSelect disableUnderline/></DialogActions>\n      </ResponsiveDialog>\n    </Grid>\n  );\n}\n\nResponsiveScreen.defaultProps = {\n  withoutLogo: false,\n  withoutPadding: false,\n  loading: false\n};\n\nResponsiveScreen.propTypes = {\n  classes: PropTypes.object.isRequired,\n  withoutLogo: PropTypes.bool,\n  withoutPadding: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  PaperProps: PropTypes.object,\n  DialogProps: PropTypes.object\n};\n\nexport default withStyles(styles)(ResponsiveScreen);\n","import axios from 'axios';\nimport queryString from 'query-string';\n\nimport * as types from './action-types';\nimport { receiveHello } from './common-actions';\nimport { newHelloRequest } from '../models/hello';\nimport { withClientRequestState } from '../utils';\nimport { handleAxiosError } from './utils';\nimport {\n  ExtendedError,\n  ERROR_LOGIN_VALIDATE_MISSINGUSERNAME,\n  ERROR_LOGIN_VALIDATE_MISSINGPASSWORD,\n  ERROR_LOGIN_FAILED,\n  ERROR_HTTP_UNEXPECTED_RESPONSE_STATUS,\n  ERROR_HTTP_UNEXPECTED_RESPONSE_STATE\n} from '../errors';\n\n// Modes for logon.\nexport const ModeLogonUsernameEmptyPasswordCookie = '0';\nexport const ModeLogonUsernamePassword = '1';\n\nexport function updateInput(name, value) {\n  return {\n    type: types.UPDATE_INPUT,\n    name,\n    value\n  };\n}\n\nexport function receiveValidateLogon(errors) {\n  return {\n    type: types.RECEIVE_VALIDATE_LOGON,\n    errors\n  };\n}\n\nexport function requestLogon(username, password) {\n  return {\n    type: types.REQUEST_LOGON,\n    username,\n    password\n  };\n}\n\nexport function receiveLogon(logon) {\n  const { success, errors } = logon;\n\n  return {\n    type: types.RECEIVE_LOGON,\n    success,\n    errors\n  };\n}\n\nexport function requestConsent(allow=false) {\n  return {\n    type: allow ? types.REQUEST_CONSENT_ALLOW : types.REQUEST_CONSENT_CANCEL\n  };\n}\n\nexport function receiveConsent(logon) {\n  const { success, errors } = logon;\n\n  return {\n    type: types.RECEIVE_CONSENT,\n    success,\n    errors\n  };\n}\n\nexport function executeLogon(username, password, mode=ModeLogonUsernamePassword) {\n  return function(dispatch, getState) {\n    dispatch(requestLogon(username, password));\n    dispatch(receiveHello({\n      username\n    })); // Reset any hello state on logon.\n\n    const { flow, query } = getState().common;\n\n    // Prepare params based on mode.\n    const params = [];\n    switch (mode) {\n      case ModeLogonUsernamePassword:\n        // Username with password.\n        params.push(username, password, mode);\n        break;\n\n      case ModeLogonUsernameEmptyPasswordCookie:\n        // Username with empty password - this only works when the user is already signed in.\n        params.push(username, '', mode);\n        break;\n    }\n\n    const r = withClientRequestState({\n      params: params,\n      hello: newHelloRequest(flow, query)\n    });\n    return axios.post('./identifier/_/logon', r, {\n      headers: {\n        'Kopano-Konnect-XSRF': '1'\n      }\n    }).then(response => {\n      switch (response.status) {\n        case 200:\n          // success.\n          return response.data;\n        case 204:\n          // login failed.\n          return {\n            success: false,\n            state: response.headers['kopano-konnect-state'],\n            errors: {\n              http: new Error(ERROR_LOGIN_FAILED)\n            }\n          };\n        default:\n          // error.\n          throw new ExtendedError(ERROR_HTTP_UNEXPECTED_RESPONSE_STATUS, response);\n      }\n    }).then(response => {\n      if (response.state !== r.state) {\n        throw new ExtendedError(ERROR_HTTP_UNEXPECTED_RESPONSE_STATE, response);\n      }\n\n      let { hello } = response;\n      if (!hello) {\n        hello = {\n          success: response.success,\n          username\n        };\n      }\n      dispatch(receiveHello(hello));\n      dispatch(receiveLogon(response));\n      return Promise.resolve(response);\n    }).catch(error => {\n      error = handleAxiosError(error);\n      const errors = {\n        http: error\n      };\n\n      dispatch(receiveValidateLogon(errors));\n      return {\n        success: false,\n        errors: errors\n      };\n    });\n  };\n}\n\nexport function executeConsent(allow=false, scope='') {\n  return function(dispatch, getState) {\n    dispatch(requestConsent(allow));\n\n    const { query } = getState().common;\n\n    const r = withClientRequestState({\n      allow,\n      scope,\n      client_id: query.client_id || '', // eslint-disable-line camelcase\n      redirect_uri: query.redirect_uri || '', // eslint-disable-line camelcase\n      ref: query.state || '',\n      flow_nonce: query.nonce || '' // eslint-disable-line camelcase\n    });\n    return axios.post('./identifier/_/consent', r, {\n      headers: {\n        'Kopano-Konnect-XSRF': '1'\n      }\n    }).then(response => {\n      switch (response.status) {\n        case 200:\n          // success.\n          return response.data;\n        case 204:\n          // cancel reply.\n          return {\n            success: true,\n            state: response.headers['kopano-konnect-state']\n          };\n        default:\n          // error.\n          throw new ExtendedError(ERROR_HTTP_UNEXPECTED_RESPONSE_STATUS, response);\n      }\n    }).then(response => {\n      if (response.state !== r.state) {\n        throw new ExtendedError(ERROR_HTTP_UNEXPECTED_RESPONSE_STATE, response);\n      }\n\n      dispatch(receiveConsent(response));\n      return Promise.resolve(response);\n    }).catch(error => {\n      error = handleAxiosError(error);\n      const errors = {\n        http: error\n      };\n\n      dispatch(receiveValidateLogon(errors));\n      return {\n        success: false,\n        errors: errors\n      };\n    });\n  };\n}\n\nexport function validateUsernamePassword(username, password, isSignedIn) {\n  return function(dispatch) {\n    return new Promise((resolve, reject) => {\n      const errors = {};\n\n      if (!username) {\n        errors.username = new Error(ERROR_LOGIN_VALIDATE_MISSINGUSERNAME);\n      }\n      if (!password && !isSignedIn) {\n        errors.password = new Error(ERROR_LOGIN_VALIDATE_MISSINGPASSWORD);\n      }\n\n      dispatch(receiveValidateLogon(errors));\n      if (Object.keys(errors).length === 0) {\n        resolve(errors);\n      } else {\n        reject(errors);\n      }\n    });\n  };\n}\n\nexport function executeLogonIfFormValid(username, password, isSignedIn) {\n  return (dispatch) => {\n    return dispatch(\n      validateUsernamePassword(username, password, isSignedIn)\n    ).then(() => {\n      const mode = isSignedIn ? ModeLogonUsernameEmptyPasswordCookie : ModeLogonUsernamePassword;\n      return dispatch(executeLogon(username, password, mode));\n    }).catch((errors) => {\n      return {\n        success: false,\n        errors: errors\n      };\n    });\n  };\n}\n\nexport function advanceLogonFlow(success, history, done=false, extraQuery={}) {\n  return (dispatch, getState) => {\n    if (!success) {\n      return;\n    }\n\n    const { flow, query, hello } = getState().common;\n    const q = Object.assign({}, query, extraQuery);\n\n    switch (flow) {\n      case 'oauth':\n      case 'consent':\n      case 'oidc':\n        if (hello.details.flow !== flow) {\n          // Ignore requested flow if hello flow does not match.\n          break;\n        }\n\n        if (!done && hello.details.next === 'consent') {\n          history.replace(`/consent${history.location.search}${history.location.hash}`);\n          return;\n        }\n        if (hello.details.continue_uri) {\n          q.prompt = 'none';\n          window.location.replace(hello.details.continue_uri + '?' + queryString.stringify(q));\n          return;\n        }\n\n        break;\n\n      default:\n        // Legacy stupid modes.\n        if (q.continue && q.continue.indexOf(document.location.origin) === 0) {\n          window.location.replace(q.continue);\n          return;\n        }\n    }\n\n    // Default action.\n    let target = '/welcome';\n    if (history.action === 'REPLACE') {\n      target = target + history.location.search + history.location.hash;\n    }\n\n    dispatch(receiveValidateLogon({})); // XXX(longsleep): hack to reset loading and errors.\n    history.push(target);\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport renderIf from 'render-if';\nimport { FormattedMessage } from 'react-intl';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport green from '@material-ui/core/colors/green';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport { updateInput, executeLogonIfFormValid, advanceLogonFlow } from '../actions/login-actions';\nimport { ErrorMessage } from '../errors';\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit,\n    minWidth: 100\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12\n  },\n  subHeader: {\n    marginBottom: theme.spacing.unit * 3\n  },\n  wrapper: {\n    position: 'relative',\n    display: 'inline-block'\n  },\n  message: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2\n  },\n  input: {\n    // NOTE(longsleep): These styles here allow JavaScript events to trigger\n    // when the browser auto fills form elements. They require additional\n    // keyframe styles for the animation names to be registerd as well.\n    '&:-webkit-autofill': {\n      // JavaScript hook when auto fill is shown.\n      animationName: 'onAutoFillStart'\n    },\n    '&:not(:-webkit-autofill)': {\n      // JavaScript hook when auto fill is removed.\n      animationName: 'onAutoFillCancel'\n    }\n  }\n});\n\nclass Login extends Component {\n  state = {};\n\n  componentDidMount() {\n    const { hello, query, dispatch, history } = this.props;\n    if (hello && hello.state && history.action !== 'PUSH') {\n      if (query.prompt !== 'select_account') {\n        dispatch(advanceLogonFlow(true, history));\n        return;\n      }\n\n      history.replace(`/chooseaccount${history.location.search}${history.location.hash}`);\n      return;\n    }\n  }\n\n  onAutoFill = (fieldName, autoFill) => {\n    this.setState({\n      [`autoFill-${fieldName}`]: autoFill ? true : undefined\n    });\n  }\n\n  bindAutoFill = fieldName => element => {\n    if (!element || !element.addEventListener) {\n      return;\n    }\n    element.addEventListener('animationstart', (e) => {\n      switch (e.animationName) {\n        case 'onAutoFillStart':\n          return this.onAutoFill(fieldName, true);\n        case 'onAutoFillCancel':\n          return this.onAutoFill(fieldName, false);\n      }\n    });\n  }\n\n  render() {\n    const { loading, errors, classes, username } = this.props;\n\n    const inputProps = {\n      username: {\n        autoCapitalize: 'off',\n        spellCheck: 'false',\n        className: classes.input,\n        ref: this.bindAutoFill('username')\n      },\n      password: {\n        className: classes.input,\n        ref: this.bindAutoFill('password')\n      }\n    };\n\n    return (\n      <div>\n        <Typography variant=\"h5\" component=\"h3\">\n          <FormattedMessage id=\"konnect.login.headline\" defaultMessage=\"Sign in\"></FormattedMessage>\n        </Typography>\n        <Typography variant=\"subtitle1\" className={classes.subHeader}>\n          <FormattedMessage id=\"konnect.login.subHeader\" defaultMessage=\"with your Kopano account\"></FormattedMessage>\n        </Typography>\n\n        <form action=\"\" onSubmit={(event) => this.logon(event)}>\n          <div>\n            <TextField\n              label={\n                <FormattedMessage id=\"konnect.login.usernameField.label\" defaultMessage=\"Username\"></FormattedMessage>\n              }\n              error={!!errors.username}\n              helperText={<ErrorMessage error={errors.username}></ErrorMessage>}\n              fullWidth\n              margin=\"dense\"\n              variant=\"outlined\"\n              InputLabelProps={{\n                shrink: this.state['autoFill-username']\n              }}\n              autoFocus\n              inputProps={inputProps.username}\n              value={username}\n              onChange={this.handleChange('username')}\n              autoComplete=\"kopano-account username\"\n            />\n            <TextField\n              type=\"password\"\n              label={\n                <FormattedMessage id=\"konnect.login.passwordField.label\" defaultMessage=\"Password\"></FormattedMessage>\n              }\n              error={!!errors.password}\n              helperText={<ErrorMessage error={errors.password}></ErrorMessage>}\n              fullWidth\n              margin=\"dense\"\n              InputLabelProps={{\n                shrink: this.state['autoFill-password']\n              }}\n              inputProps={inputProps.password}\n              variant=\"outlined\"\n              onChange={this.handleChange('password')}\n              autoComplete=\"kopano-account current-password\"\n            />\n            <DialogActions>\n              <div className={classes.wrapper}>\n                <Button\n                  type=\"submit\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  className={classes.button}\n                  disabled={!!loading}\n                  onClick={(event) => this.logon(event)}\n                >\n                  <FormattedMessage id=\"konnect.login.nextButton.label\" defaultMessage=\"Next\"></FormattedMessage>\n                </Button>\n                {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n              </div>\n            </DialogActions>\n          </div>\n\n          {renderIf(errors.http)(() => (\n            <Typography variant=\"subtitle2\" color=\"error\" className={classes.message}>\n              <ErrorMessage error={errors.http}></ErrorMessage>\n            </Typography>\n          ))}\n        </form>\n      </div>\n    );\n  }\n\n  handleChange(name) {\n    return event => {\n      this.props.dispatch(updateInput(name, event.target.value));\n    };\n  }\n\n  logon(event) {\n    event.preventDefault();\n\n    const { username, password, dispatch, history } = this.props;\n    dispatch(executeLogonIfFormValid(username, password, false)).then((response) => {\n      if (response.success) {\n        dispatch(advanceLogonFlow(response.success, history));\n      }\n    });\n  }\n}\n\nLogin.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  loading: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n  errors: PropTypes.object.isRequired,\n  hello: PropTypes.object,\n  query: PropTypes.object.isRequired,\n\n  dispatch: PropTypes.func.isRequired,\n  history: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => {\n  const { loading, username, password, errors} = state.login;\n  const { hello, query } = state.common;\n\n  return {\n    loading,\n    username,\n    password,\n    errors,\n    hello,\n    query\n  };\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(Login));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\n\nimport { executeLogonIfFormValid, advanceLogonFlow } from '../actions/login-actions';\nimport { ErrorMessage } from '../errors';\n\nconst styles = theme => ({\n  subHeader: {\n    marginBottom: theme.spacing.unit * 2\n  },\n  message: {\n    marginTop: theme.spacing.unit * 2\n  },\n  accountList: {\n    marginLeft: theme.spacing.unit * -3,\n    marginRight: theme.spacing.unit * -3\n  },\n  accountListItem: {\n    paddingLeft: theme.spacing.unit * 3,\n    paddingRight: theme.spacing.unit * 3\n  }\n});\n\nclass Chooseaccount extends Component {\n  componentDidMount() {\n    const { hello, history } = this.props;\n    if ((!hello || !hello.state) && history.action !== 'PUSH') {\n      history.replace(`/identifier${history.location.search}${history.location.hash}`);\n    }\n  }\n\n  render() {\n    const { loading, errors, classes, hello } = this.props;\n\n    let errorMessage = null;\n    if (errors.http) {\n      errorMessage = <Typography color=\"error\" className={classes.message}>\n        <ErrorMessage error={errors.http}></ErrorMessage>\n      </Typography>;\n    }\n\n    let username = '';\n    if (hello && hello.state) {\n      username = hello.username;\n    }\n\n    return (\n      <div>\n        <Typography variant=\"h5\" component=\"h3\">\n          <FormattedMessage id=\"konnect.chooseaccount.headline\" defaultMessage=\"Choose an account\"></FormattedMessage>\n        </Typography>\n        <Typography variant=\"subtitle1\" className={classes.subHeader}>\n          <FormattedMessage id=\"konnect.chooseaccount.subHeader\" defaultMessage=\"to sign in to Kopano\">\n          </FormattedMessage>\n        </Typography>\n\n        <form action=\"\" onSubmit={(event) => this.logon(event)}>\n          <List disablePadding className={classes.accountList}>\n            <ListItem\n              button\n              disableGutters\n              className={classes.accountListItem}\n              disabled={!!loading}\n              onClick={(event) => this.logon(event)}\n            ><Avatar>{username.substr(0, 1)}</Avatar>\n              <ListItemText primary={username} />\n            </ListItem>\n            <ListItem\n              button\n              disableGutters\n              className={classes.accountListItem}\n              disabled={!!loading}\n              onClick={(event) => this.logoff(event)}\n            >\n              <Avatar>\n                <FormattedMessage id=\"konnect.chooseaccount.useOther.persona.label\" defaultMessage=\"?\">\n                </FormattedMessage>\n              </Avatar>\n              <ListItemText\n                primary={\n                  <FormattedMessage\n                    id=\"konnect.chooseaccount.useOther.label\"\n                    defaultMessage=\"Use another account\">\n                  </FormattedMessage>\n                }\n              />\n            </ListItem>\n          </List>\n\n          {errorMessage}\n        </form>\n      </div>\n    );\n  }\n\n  logon(event) {\n    event.preventDefault();\n\n    const { hello, dispatch, history } = this.props;\n    dispatch(executeLogonIfFormValid(hello.username, '', true)).then((response) => {\n      if (response.success) {\n        dispatch(advanceLogonFlow(response.success, history));\n      }\n    });\n  }\n\n  logoff(event) {\n    event.preventDefault();\n\n    const { history} = this.props;\n    history.push(`/identifier${history.location.search}${history.location.hash}`);\n  }\n}\n\nChooseaccount.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  loading: PropTypes.string.isRequired,\n  errors: PropTypes.object.isRequired,\n  hello: PropTypes.object,\n\n  dispatch: PropTypes.func.isRequired,\n  history: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => {\n  const { loading, errors } = state.login;\n  const { hello } = state.common;\n\n  return {\n    loading,\n    errors,\n    hello\n  };\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(Chooseaccount));\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ClientDisplayName = ({ client, ...rest }) => (\n  <span {...rest}>{client.display_name ? client.display_name : client.id}</span>\n);\n\nClientDisplayName.propTypes = {\n  client: PropTypes.object.isRequired\n};\n\nexport default ClientDisplayName;\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport { injectIntl, intlShape, defineMessages, FormattedMessage } from 'react-intl';\n\nconst styles = () => ({\n  row: {\n    paddingTop: 0,\n    paddingBottom: 0\n  }\n});\n\nconst scopeIDTranslations = defineMessages({\n  'scope_alias_basic': {\n    id: 'konnect.scopeDescription.aliasBasic',\n    defaultMessage: 'Access your basic account information'\n  },\n  'scope_offline_access': {\n    id: 'konnect.scopeDescription.offlineAccess',\n    defaultMessage: 'Keep the allowed access persistently and forever'\n  }\n});\n\nconst ScopesList = ({scopes, meta, classes, intl, ...rest}) => {\n  const { mapping, definitions } = meta;\n\n  const rows = [];\n  const known = {};\n\n  // TODO(longsleep): Sort scopes according to priority.\n  for (let scope in scopes) {\n    if (!scopes[scope]) {\n      continue;\n    }\n    let id = mapping[scope];\n    if (id) {\n      if (known[id]) {\n        continue;\n      }\n      known[id] = true;\n    } else {\n      id = scope;\n    }\n    let definition = definitions[id];\n    let label ;\n    if (definition) {\n      if (definition.id) {\n        const translation = scopeIDTranslations[definition.id];\n        if (translation) {\n          label = intl.formatMessage(translation);\n        }\n      }\n      if (!label) {\n        label = definition.description;\n      }\n    }\n    if (!label) {\n      label = <FormattedMessage\n        id=\"konnect.scopeDescription.scope\"\n        defaultMessage=\"Scope: {scope}\"\n        values={{scope}}\n      />;\n    }\n\n    rows.push(\n      <ListItem\n        disableGutters\n        dense\n        key={id}\n        className={classes.row}\n      ><Checkbox\n          checked\n          disableRipple\n          disabled\n        />\n        <ListItemText primary={label} />\n      </ListItem>\n    );\n  }\n\n  return (\n    <List {...rest}>\n      {rows}\n    </List>\n  );\n};\n\nScopesList.propTypes = {\n  classes: PropTypes.object.isRequired,\n  intl: intlShape.isRequired,\n\n  scopes: PropTypes.object.isRequired,\n  meta: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(injectIntl(ScopesList));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport renderIf from 'render-if';\nimport { FormattedMessage } from 'react-intl';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport green from '@material-ui/core/colors/green';\nimport Typography from '@material-ui/core/Typography';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport { executeConsent, advanceLogonFlow, receiveValidateLogon } from '../actions/login-actions';\nimport { ErrorMessage } from '../errors';\nimport { REQUEST_CONSENT_ALLOW } from '../actions/action-types';\nimport ClientDisplayName from './ClientDisplayName';\nimport ScopesList from './ScopesList';\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit,\n    minWidth: 100\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12\n  },\n  subHeader: {\n    marginBottom: theme.spacing.unit * 2\n  },\n  scopesList: {\n    marginBottom: theme.spacing.unit * 2\n  },\n  wrapper: {\n    marginTop: theme.spacing.unit * 2,\n    position: 'relative',\n    display: 'inline-block'\n  },\n  message: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2\n  }\n});\n\nclass Consent extends Component {\n  componentDidMount() {\n    const { dispatch, hello, history, client } = this.props;\n    if ((!hello || !hello.state || !client) && history.action !== 'PUSH') {\n      history.replace(`/identifier${history.location.search}${history.location.hash}`);\n    }\n\n    dispatch(receiveValidateLogon({})); // XXX(longsleep): hack to reset loading and errors.\n  }\n\n  action = (allow=false, scopes={}) => (event) => {\n    event.preventDefault();\n\n    if (allow === undefined) {\n      return;\n    }\n\n    // Convert all scopes which are true to a scope value.\n    const scope = Object.keys(scopes).filter(scope => {\n      return !!scopes[scope];\n    }).join(' ');\n\n    const { dispatch, history } = this.props;\n    dispatch(executeConsent(allow, scope)).then((response) => {\n      if (response.success) {\n        dispatch(advanceLogonFlow(response.success, history, true, {konnect: response.state}));\n      }\n    });\n  }\n\n  render() {\n    const { classes, loading, hello, errors, client } = this.props;\n\n    const scopes = hello.details.scopes || {};\n    const meta = hello.details.meta || {};\n\n    return (\n      <div>\n        <Typography variant=\"h5\" component=\"h3\">\n          <FormattedMessage\n            id=\"konnect.consent.headline\"\n            defaultMessage=\"Hi {displayName}\"\n            values={{displayName: hello.displayName}}>\n          </FormattedMessage>\n        </Typography>\n        <Typography variant=\"subtitle1\" className={classes.subHeader}>\n          {hello.username}\n        </Typography>\n\n        <Typography variant=\"subtitle1\" gutterBottom>\n          <FormattedMessage\n            id=\"konnect.consent.message\"\n            defaultMessage=\"{clientDisplayName} wants to\"\n            values={{clientDisplayName:\n              <Tooltip\n                placement=\"bottom\"\n                title={<FormattedMessage\n                  id=\"konnect.consent.tooltip.client\"\n                  defaultMessage='Clicking \"Allow\" will redirect you to: {redirectURI}'\n                  values={{\n                    redirectURI: client.redirect_uri\n                  }}\n                ></FormattedMessage>}\n              >\n                <em><ClientDisplayName client={client}/></em>\n              </Tooltip>\n            }}\n          ></FormattedMessage>\n        </Typography>\n        <ScopesList dense disablePadding className={classes.scopesList} scopes={scopes} meta={meta.scopes}></ScopesList>\n\n        <Typography variant=\"subtitle1\" gutterBottom>\n          <FormattedMessage\n            id=\"konnect.consent.question\"\n            defaultMessage=\"Allow {clientDisplayName} to do this?\"\n            values={{\n              clientDisplayName: <em><ClientDisplayName client={client}/></em>\n            }}\n          ></FormattedMessage>\n        </Typography>\n        <Typography color=\"secondary\">\n          <FormattedMessage\n            id=\"konnect.consent.consequence\"\n            defaultMessage=\"By clicking Allow, you allow this app to use your information.\">\n          </FormattedMessage>\n        </Typography>\n\n        <form action=\"\" onSubmit={this.action(undefined, scopes)}>\n          <DialogActions>\n            <div className={classes.wrapper}>\n              <Button\n                color=\"secondary\"\n                className={classes.button}\n                disabled={!!loading}\n                onClick={this.action(false, scopes)}\n              >\n                <FormattedMessage id=\"konnect.consent.cancelButton.label\" defaultMessage=\"Cancel\"></FormattedMessage>\n              </Button>\n              {(loading && loading !== REQUEST_CONSENT_ALLOW) &&\n                <CircularProgress size={24} className={classes.buttonProgress} />}\n            </div>\n            <div className={classes.wrapper}>\n              <Button\n                type=\"submit\"\n                color=\"primary\"\n                variant=\"contained\"\n                className={classes.button}\n                disabled={!!loading}\n                onClick={this.action(true, scopes)}\n              >\n                <FormattedMessage id=\"konnect.consent.allowButton.label\" defaultMessage=\"Allow\"></FormattedMessage>\n              </Button>\n              {loading === REQUEST_CONSENT_ALLOW && <CircularProgress size={24} className={classes.buttonProgress} />}\n            </div>\n          </DialogActions>\n\n          {renderIf(errors.http)(() => (\n            <Typography variant=\"subtitle2\" color=\"error\" className={classes.message}>\n              <ErrorMessage error={errors.http}></ErrorMessage>\n            </Typography>\n          ))}\n        </form>\n      </div>\n    );\n  }\n}\n\nConsent.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  loading: PropTypes.string.isRequired,\n  errors: PropTypes.object.isRequired,\n  hello: PropTypes.object,\n  client: PropTypes.object.isRequired,\n\n  dispatch: PropTypes.func.isRequired,\n  history: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => {\n  const { hello } = state.common;\n  const { loading, errors } = state.login;\n\n  return {\n    loading: loading,\n    errors,\n    hello,\n    client: hello.details.client || {}\n  };\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(Consent));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\nimport { Redirect } from 'react-router-dom';\n\nconst RedirectWithQuery = ({target, location, ...rest}) => {\n  const to = {\n    pathname: target,\n    search: location.search,\n    hash: location.hash\n  };\n\n  return (\n    <Redirect to={to} {...rest}></Redirect>\n  );\n};\n\nRedirectWithQuery.propTypes = {\n  target: PropTypes.string.isRequired,\n  location: PropTypes.object.isRequired\n};\n\nexport default withRouter(RedirectWithQuery);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Route, Switch } from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport ResponsiveScreen from './ResponsiveScreen';\nimport Login from './Login';\nimport Chooseaccount from './Chooseaccount';\nimport Consent from './Consent';\nimport RedirectWithQuery from './RedirectWithQuery';\n\nimport { executeHello } from '../actions/common-actions';\n\nconst styles = () => ({\n});\n\nclass Loginscreen extends React.PureComponent {\n  componentDidMount() {\n    this.props.dispatch(executeHello());\n  }\n\n  render() {\n    const { hello } = this.props;\n\n    const loading = hello === null;\n    return (\n      <ResponsiveScreen loading={loading}>\n        <Switch>\n          <Route path=\"/identifier\" exact component={Login}></Route>\n          <Route path=\"/chooseaccount\" exact component={Chooseaccount}></Route>\n          <Route path=\"/consent\" exact component={Consent}></Route>\n          <RedirectWithQuery target=\"/identifier\"/>\n        </Switch>\n      </ResponsiveScreen>\n    );\n  }\n}\n\nLoginscreen.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  hello: PropTypes.object,\n\n  dispatch: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => {\n  const { hello } = state.common;\n\n  return {\n    hello\n  };\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(Loginscreen));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport ResponsiveScreen from './ResponsiveScreen';\nimport { executeLogoff } from '../actions/common-actions';\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit,\n    minWidth: 100\n  },\n  subHeader: {\n    marginBottom: theme.spacing.unit * 5\n  }\n});\n\nclass Welcomescreen extends React.PureComponent {\n  render() {\n    const { classes, hello } = this.props;\n\n    const loading = hello === null;\n    return (\n      <ResponsiveScreen loading={loading}>\n        <Typography variant=\"h5\" component=\"h3\">\n          <FormattedMessage\n            id=\"konnect.welcome.headline\"\n            defaultMessage=\"Welcome {displayName}\"\n            values={{displayName: hello.displayName}}>\n          </FormattedMessage>\n        </Typography>\n        <Typography variant=\"subtitle1\" className={classes.subHeader}>\n          {hello.username}\n        </Typography>\n\n        <Typography gutterBottom>\n          <FormattedMessage id=\"konnect.welcome.message\"\n            defaultMessage=\"You are signed in - awesome!\"></FormattedMessage>\n        </Typography>\n\n        <DialogActions>\n          <Button\n            color=\"secondary\"\n            className={classes.button}\n            variant=\"contained\"\n            onClick={(event) => this.logoff(event)}\n          >\n            <FormattedMessage id=\"konnect.welcome.signoutButton.label\" defaultMessage=\"Sign out\"></FormattedMessage>\n          </Button>\n        </DialogActions>\n      </ResponsiveScreen>\n    );\n  }\n\n  logoff(event) {\n    event.preventDefault();\n\n    this.props.dispatch(executeLogoff()).then((response) => {\n      const { history } = this.props;\n\n      if (response.success) {\n        history.push('/identifier');\n      }\n    });\n  }\n}\n\nWelcomescreen.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  hello: PropTypes.object,\n\n  dispatch: PropTypes.func.isRequired,\n  history: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => {\n  const { hello } = state.common;\n\n  return {\n    hello\n  };\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(Welcomescreen));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport renderIf from 'render-if';\nimport { FormattedMessage } from 'react-intl';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport ResponsiveScreen from './ResponsiveScreen';\nimport { executeHello, executeLogoff } from '../actions/common-actions';\n\nconst styles = theme => ({\n  subHeader: {\n    marginBottom: theme.spacing.unit * 5\n  },\n  wrapper: {\n    marginTop: theme.spacing.unit * 5,\n    position: 'relative',\n    display: 'inline-block'\n  }\n});\n\nclass Goodbyescreen extends React.PureComponent {\n  componentDidMount() {\n    this.props.dispatch(executeHello());\n  }\n\n  render() {\n    const { classes, hello } = this.props;\n\n    const loading = hello === null;\n    return (\n      <ResponsiveScreen loading={loading}>\n        {renderIf(hello !== null && !hello.state)(() => (\n          <div>\n            <Typography variant=\"h5\" component=\"h3\">\n              <FormattedMessage id=\"konnect.goodbye.headline\" defaultMessage=\"Goodbye\"></FormattedMessage>\n            </Typography>\n            <Typography variant=\"subtitle1\" className={classes.subHeader}>\n              <FormattedMessage id=\"konnect.goodbye.subHeader\"\n                defaultMessage=\"you have been signed out from your Kopano account\">\n              </FormattedMessage>\n            </Typography>\n            <Typography gutterBottom>\n              <FormattedMessage id=\"konnect.goodbye.message.close\"\n                defaultMessage=\"You can close this window now.\">\n              </FormattedMessage>\n            </Typography>\n          </div>\n        ))}\n        {renderIf(hello !== null && hello.state === true)(() => (\n          <div>\n            <Typography variant=\"h5\" component=\"h3\">\n              <FormattedMessage\n                id=\"konnect.goodbye.confirm.headline\"\n                defaultMessage=\"Hello {displayName}\"\n                values={{displayName: hello.displayName}}>\n              </FormattedMessage>\n            </Typography>\n            <Typography variant=\"subtitle1\" className={classes.subHeader}>\n              <FormattedMessage id=\"konnect.goodbye.confirm.subHeader\"\n                defaultMessage=\"please confirm sign out\">\n              </FormattedMessage>\n            </Typography>\n\n            <Typography gutterBottom>\n              <FormattedMessage id=\"konnect.goodbye.message.confirm\"\n                defaultMessage=\"Press the button below, to sign out from your Kopano account now.\">\n              </FormattedMessage>\n            </Typography>\n\n            <DialogActions>\n              <div className={classes.wrapper}>\n                <Button\n                  color=\"secondary\"\n                  className={classes.button}\n                  onClick={(event) => this.logoff(event)}\n                >\n                  <FormattedMessage id=\"konnect.goodbye.signoutButton.label\"\n                    defaultMessage=\"Sign out\"></FormattedMessage>\n                </Button>\n              </div>\n            </DialogActions>\n          </div>\n        ))}\n      </ResponsiveScreen>\n    );\n  }\n\n  logoff(event) {\n    event.preventDefault();\n\n    this.props.dispatch(executeLogoff()).then((response) => {\n      const { history } = this.props;\n\n      if (response.success) {\n        this.props.dispatch(executeHello());\n        history.push('/goodbye');\n      }\n    });\n  }\n}\n\nGoodbyescreen.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  hello: PropTypes.object,\n\n  dispatch: PropTypes.func.isRequired,\n  history: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => {\n  const { hello } = state.common;\n\n  return {\n    hello\n  };\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(Goodbyescreen));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route } from 'react-router-dom';\n\nimport RedirectWithQuery from './RedirectWithQuery';\n\nconst PrivateRoute = ({ component: Target, hello, ...rest }) => (\n  <Route {...rest} render={props => (\n    hello ? (\n      <Target {...props}/>\n    ) : (\n      <RedirectWithQuery target='/identifier' />\n    )\n  )}/>\n);\n\nPrivateRoute.propTypes = {\n  component: PropTypes.func.isRequired,\n  hello: PropTypes.object\n};\n\nexport default PrivateRoute;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { enhanceBodyBackground } from '../utils';\nimport Loginscreen from '../components/Loginscreen';\nimport Welcomescreen from '../components/Welcomescreen';\nimport Goodbyescreen from '../components/Goodbyescreen';\nimport PrivateRoute from '../components/PrivateRoute';\n\n// Trigger loading of background image.\nenhanceBodyBackground();\n\nconst styles = () => ({\n  root: {\n    position: 'relative',\n    display: 'flex',\n    flex: 1\n  }\n});\n\nclass Identifier extends PureComponent {\n  render() {\n    const { classes, hello, pathPrefix } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <BrowserRouter basename={pathPrefix}>\n          <Switch>\n            <PrivateRoute path=\"/welcome\" exact component={Welcomescreen} hello={hello}></PrivateRoute>\n            <Route path=\"/goodbye\" exact component={Goodbyescreen}></Route>\n            <Route path=\"/\" component={Loginscreen}></Route>\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n\n  reload(event) {\n    event.preventDefault();\n\n    window.location.reload();\n  }\n}\n\nIdentifier.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  hello: PropTypes.object,\n  updateAvailable: PropTypes.bool.isRequired,\n  pathPrefix: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = (state) => {\n  const { hello, updateAvailable, pathPrefix } = state.common;\n\n  return {\n    hello,\n    updateAvailable,\n    pathPrefix\n  };\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(Identifier));\n"],"sourceRoot":""}